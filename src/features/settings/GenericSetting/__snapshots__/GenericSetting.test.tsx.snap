// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GenericSetting component should render correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={{}}
    style={{}}
  >
    <Text
      style={
        [
          {
            "color": "#18181b",
          },
          {
            "fontFamily": undefined,
            "fontSize": 19,
          },
          {
            "marginBottom": 10,
          },
        ]
      }
    >
      Name
    </Text>
    <View
      dataSet={{}}
      isFocused={false}
      style={
        {
          "alignItems": "center",
          "borderColor": "#d4d4d4",
          "borderRadius": 4,
          "borderWidth": 1,
          "flexDirection": "row",
          "overflow": "hidden",
        }
      }
    >
      <TextInput
        accessible={true}
        dataSet={{}}
        editable={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholderTextColor="#a3a3a3"
        secureTextEntry={false}
        style={
          {
            "backgroundColor": "transparent",
            "color": "#171717",
            "flex": 1,
            "fontFamily": undefined,
            "fontSize": 18,
            "fontStyle": "normal",
            "fontWeight": "400",
            "height": "100%",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
            "width": "100%",
          }
        }
        testID="input"
        value="John Doe"
      />
    </View>
    <View
      isFullWidth={true}
      isLoading={false}
      onPress={[Function]}
      style={
        {
          "marginTop": 25,
        }
      }
      testID="button"
      type={0}
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "marginTop": 25,
            "opacity": 1,
          }
        }
      >
        <ViewManagerAdapter_ExpoLinearGradient
          proxiedProperties={
            {
              "colors": [
                4278220774,
                4286456526,
              ],
              "endPoint": [
                1,
                1,
              ],
              "locations": undefined,
              "startPoint": [
                0,
                0,
              ],
            }
          }
          style={
            [
              {
                "alignItems": "center",
                "borderRadius": 10,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingHorizontal": 40,
                "paddingVertical": 15,
              },
              {
                "width": "100%",
              },
            ]
          }
        >
          <Text
            style={
              [
                {
                  "color": "#18181b",
                },
                {
                  "color": "#e4e4e7",
                  "fontFamily": undefined,
                  "fontSize": 19,
                },
                [
                  null,
                  {
                    "alignSelf": "center",
                  },
                ],
              ]
            }
          >
            Done
          </Text>
          <View
            style={
              {
                "marginLeft": 5,
              }
            }
          />
        </ViewManagerAdapter_ExpoLinearGradient>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
