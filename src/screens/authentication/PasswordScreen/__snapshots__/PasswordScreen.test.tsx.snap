// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders correctly. 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <ViewManagerAdapter_ExpoLinearGradient
    proxiedProperties={
      {
        "colors": [
          4293190887,
          4294243573,
        ],
        "endPoint": undefined,
        "locations": undefined,
        "startPoint": undefined,
      }
    }
    style={
      {
        "height": "100%",
      }
    }
  >
    <View
      style={
        {
          "height": "100%",
          "padding": 25,
          "width": "100%",
        }
      }
    >
      <View
        style={
          {
            "height": "100%",
            "paddingTop": "10%",
            "width": "100%",
          }
        }
      >
        <Text
          style={
            [
              {
                "color": "#18181b",
              },
              {
                "fontFamily": undefined,
                "fontSize": 40,
              },
              {
                "marginBottom": 25,
              },
            ]
          }
        >
          What's your password?
        </Text>
        <Text
          style={
            [
              {
                "color": "#18181b",
              },
              {
                "fontFamily": undefined,
                "fontSize": 19,
              },
              {
                "marginBottom": 5,
              },
            ]
          }
        >
          Please ensure password:
        </Text>
        <View
          dataSet={{}}
          style={
            {
              "borderColor": "#d4d4d8",
              "borderWidth": 0,
              "marginBottom": 16,
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <Text
            style={
              [
                {
                  "color": "#18181b",
                },
                {
                  "color": "#71717a",
                  "fontFamily": undefined,
                  "fontSize": 15,
                },
                undefined,
              ]
            }
          >
            - 
            Is 8 characters or longer
          </Text>
          <View
            dataSet={{}}
            style={
              {
                "height": 8,
              }
            }
          />
          <Text
            style={
              [
                {
                  "color": "#18181b",
                },
                {
                  "color": "#71717a",
                  "fontFamily": undefined,
                  "fontSize": 15,
                },
                undefined,
              ]
            }
          >
            - 
            Contains at least one uppercase and lowercase character
          </Text>
          <View
            dataSet={{}}
            style={
              {
                "height": 8,
              }
            }
          />
          <Text
            style={
              [
                {
                  "color": "#18181b",
                },
                {
                  "color": "#71717a",
                  "fontFamily": undefined,
                  "fontSize": 15,
                },
                undefined,
              ]
            }
          >
            - 
            Contains at least one special character
          </Text>
        </View>
        <View>
          <Text
            style={
              [
                {
                  "color": "#18181b",
                },
                {
                  "color": "#71717a",
                  "fontFamily": undefined,
                  "fontSize": 15,
                },
                {
                  "marginBottom": 5,
                },
              ]
            }
          >
            Password
          </Text>
          <View
            dataSet={{}}
            isFocused={false}
            style={
              {
                "alignItems": "center",
                "borderColor": "#d4d4d4",
                "borderRadius": 4,
                "borderWidth": 1,
                "flexDirection": "row",
                "overflow": "hidden",
              }
            }
          >
            <TextInput
              accessible={true}
              dataSet={{}}
              editable={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholderTextColor="#a3a3a3"
              secureTextEntry={true}
              style={
                {
                  "backgroundColor": "transparent",
                  "color": "#171717",
                  "flex": 1,
                  "fontFamily": undefined,
                  "fontSize": 18,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "100%",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                  "width": "100%",
                }
              }
              testID="password-input"
              value=""
            />
          </View>
          <View
            icon={
              <Icon
                allowFontScaling={false}
                color="white"
                name="arrowright"
                size={20}
              />
            }
            isFullWidth={true}
            onPress={[Function]}
            style={
              {
                "marginTop": 20,
              }
            }
            type={0}
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "marginTop": 20,
                  "opacity": 1,
                }
              }
            >
              <ViewManagerAdapter_ExpoLinearGradient
                proxiedProperties={
                  {
                    "colors": [
                      4278220774,
                      4286456526,
                    ],
                    "endPoint": [
                      1,
                      1,
                    ],
                    "locations": undefined,
                    "startPoint": [
                      0,
                      0,
                    ],
                  }
                }
                style={
                  [
                    {
                      "alignItems": "center",
                      "borderRadius": 10,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "paddingHorizontal": 40,
                      "paddingVertical": 15,
                    },
                    {
                      "width": "100%",
                    },
                  ]
                }
              >
                <Text
                  style={
                    [
                      {
                        "color": "#18181b",
                      },
                      {
                        "color": "#e4e4e7",
                        "fontFamily": undefined,
                        "fontSize": 19,
                      },
                      [
                        null,
                        {
                          "alignSelf": "center",
                        },
                      ],
                    ]
                  }
                >
                  Continue
                </Text>
                <View
                  style={
                    {
                      "marginLeft": 5,
                    }
                  }
                >
                  <Text />
                </View>
              </ViewManagerAdapter_ExpoLinearGradient>
            </View>
          </View>
        </View>
      </View>
    </View>
  </ViewManagerAdapter_ExpoLinearGradient>
</RNCSafeAreaProvider>
`;
